---
interface Project {
  name: string;
  description: string;
  cohort: string;
  link: string;
  linkText: string;
  logo?: string;
}

interface Props {
  projects: Project[];
  showCTA?: boolean;
  ctaText?: string;
  ctaLink?: string;
  darkTheme?: boolean;
  showTitle?: boolean;
  title?: string;
}

const { 
  projects, 
  showCTA = false, 
  ctaText = "See All Projects", 
  ctaLink = "/showcase",
  darkTheme = false,
  showTitle = false,
  title = "SEC Project Showcase"
} = Astro.props;

const containerClasses = darkTheme 
  ? "w-full text-white bg-black py-8 sm:py-16" 
  : "section bg-theme-light";

const headerClasses = darkTheme 
  ? "text-2xl sm:text-3xl mb-8" 
  : "text-3xl mb-8";

const titleClasses = darkTheme
  ? "text-4xl mb-8 pt-16 text-center text-white font-normal"
  : "text-4xl mb-8 text-center";

const borderClasses = darkTheme 
  ? "border-white" 
  : "border-border";

const textClasses = darkTheme 
  ? "text-white" 
  : "text-text";

const descriptionClasses = darkTheme 
  ? "text-gray-300" 
  : "text-text";

const linkClasses = darkTheme 
  ? "text-white hover:text-primary transition-colors break-all" 
  : "text-primary hover:text-primary/80 transition-colors break-all font-medium";
---

<section class={containerClasses}>
  <div class={darkTheme ? "px-8 sm:px-16" : "container"}>
    {showTitle && (
      <h1 class={titleClasses}>PROJECT SHOWCASE</h1>
    )}
    {!showTitle && (
      <h2 class={headerClasses}>SEC Project Showcase</h2>
    )}

    <div class="overflow-x-auto">
      <!-- Table Header - Hidden on mobile, shown on larger screens -->
      <div class={`hidden md:grid grid-cols-[2fr_1fr_1fr] gap-8 py-4 border-b ${borderClasses} text-sm font-bold uppercase tracking-wider`}>
        <div>Project Info</div>
        <div>Cohort #</div>
        <div>Link</div>
      </div>

      <!-- Project Entries -->
      {projects.map((project, index) => (
        <div
          key={index}
          class={`flex flex-col md:grid md:grid-cols-[2fr_1fr_1fr] gap-4 md:gap-8 py-${darkTheme ? '4' : '6'} border-b ${borderClasses}`}
        >
          <div class="flex items-start gap-4">
            {project.logo && (
              <div class="flex-shrink-0">
                <img 
                  src={project.logo} 
                  alt={`${project.name} logo`}
                  class="w-12 h-12 object-contain showcase-logo"
                />
              </div>
            )}
            <div>
              <h4 class={`${darkTheme ? 'text-xl' : 'text-xl font-semibold'} ${darkTheme ? '' : 'mb-2'}`}>{project.name}</h4>
              <p class={`${darkTheme ? 'my-0' : ''} ${descriptionClasses}`}>{project.description}</p>
            </div>
          </div>
          <div class="text-sm md:text-base">
            <span class="md:hidden font-bold">Cohort: </span>
            {darkTheme ? (
              project.cohort
            ) : (
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary text-white">
                {project.cohort}
              </span>
            )}
          </div>
          <div class="text-sm md:text-base">
            <a
              href={project.link}
              class={linkClasses}
              target="_blank"
              rel="noopener noreferrer"
            >
              {project.linkText}
            </a>
          </div>
        </div>
      ))}
    </div>
    
    {showCTA && (
      <div class="text-center mt-8">
        <a href={ctaLink} class="btn-retro">
          {ctaText}
        </a>
      </div>
    )}
  </div>
</section>

<style>
  .showcase-logo {
    filter: contrast(1000%) grayscale(100%);
    image-rendering: pixelated;
    image-rendering: crisp-edges;
    transition: filter 0.3s ease;
  }

  .showcase-logo:hover {
    filter: none;
  }
</style>