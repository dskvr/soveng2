---
import BaseNoHeader from "@/layouts/BaseNoHeader.astro";
import Accordion from "@/shortcodes/Accordion.tsx";

// Eagerly import all show-note ("essence") files that live in the transcripts folder.
// The glob is relative to *this* file (src/pages), so we step back once to reach src/data.
const essenceModules = import.meta.glob("../data/no-solutions-transcripts/* essence.md", {
  eager: true,
});

interface Episode {
  episodeNumber: string;
  title: string;
  Content: any;
}

// Transform the imported modules into a strongly-typed, sorted episode list.
const episodes: Episode[] = Object.entries(essenceModules).map(([filePath, mod]: [string, any]) => {
  const fileName = filePath.split("/").pop() ?? "";
  // Example filename: "01 - Start Ugly - essence.md"
  const match = fileName.match(/^(\d{2})\s+-\s+(.*?)\s+-\s+essence\.md$/);
  const episodeNumber = match ? match[1] : "";
  const title = match ? match[2] : fileName.replace(/\.md$/, "");
  const Content = mod.default;
  return { episodeNumber, title, Content };
}).sort((a, b) => Number(b.episodeNumber) - Number(a.episodeNumber)); // Newest first

const pageTitle = "Podcast â€“ Show Notes";
const pageDescription = "Essence files (show notes) for every episode of the No Solutions podcast.";
---

<BaseNoHeader title={pageTitle} description={pageDescription}>
  <section class="section-sm">
    <div class="container">
      <h1 class="h2 text-center mb-8">{pageTitle}</h1>
      <p class="text-center mb-12">{pageDescription}</p>

      {
        episodes.map(({ episodeNumber, title, Content }) => (
          <Accordion
            client:load
            title={`Episode ${episodeNumber}: ${title}`}
            className="mb-6"
          >
            <div class="content prose max-w-none">
              <Content />
            </div>
          </Accordion>
        ))
      }
    </div>
  </section>
</BaseNoHeader> 