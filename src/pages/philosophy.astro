---
import BaseNoHeader from "@/layouts/BaseNoHeader.astro";
import BigBlockQuote from "@/layouts/components/BigBlockQuote.astro";
import ContentSection from "@/layouts/components/ContentSection.astro";
import slideShip from "@/data/common-slides/pirate-ship-2.jpeg";
import slideFreedomTech from "@/data/common-slides/surveillance-capitalism.jpeg";
import slideWalk from "@/data/common-slides/walking.jpeg";
import slideEndurance from "@/data/common-slides/endurance.jpeg";
import slideExplorers from "@/data/common-slides/pirate-ship-2.jpeg";
import slideInPerson from "@/data/common-slides/soveng-shirt.jpeg";
import slideBias from "@/data/common-slides/show-talk-build-loop.jpeg";
import slideCypherpunks from "@/data/common-slides/cypherpunks-write-code.jpeg";
import slideWideOpenSea from "@/data/common-slides/wide-open-sea.jpeg";
import slideBellLabs from "@/data/common-slides/bell-labs.jpeg";
import slideSolvitur from "@/data/common-slides/solvitur-ambulando.jpeg";
import slideGenesisBlock from "@/data/common-slides/genesis-block.png";
import philosophyQuotes from "@/data/philosophy-quotes.json";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

// Get philosophy content
const philosophy = (await getEntry(
  "philosophy",
  "-index"
)) as CollectionEntry<"philosophy">;

const { title, meta_title, description, intro, sections, cta } = philosophy.data;

// Helper function to find quote by section (preserving existing quote system)
const getQuote = (section: string) => {
  return philosophyQuotes.find(q => q.section === section);
};

// Map image filenames to imported slide objects
const slideMap: Record<string, any> = {
  "pirate-ship-2.jpeg": slideShip,
  "surveillance-capitalism.jpeg": slideFreedomTech,
  "walking.jpeg": slideWalk,
  "endurance.jpeg": slideEndurance,
  "soveng-shirt.jpeg": slideInPerson,
  "show-talk-build-loop.jpeg": slideBias,
  "cypherpunks-write-code.jpeg": slideCypherpunks,
  "wide-open-sea.jpeg": slideWideOpenSea,
  "bell-labs.jpeg": slideBellLabs,
  "solvitur-ambulando.jpeg": slideSolvitur,
  "genesis-block.png": slideGenesisBlock,
};

// Process markdown content for intro
const introContent = await markdownify(intro.content);
---

<BaseNoHeader
  title={title}
  meta_title={meta_title}
  description={description}
>
  <!-- Page Header Section -->
  <section class="section-sm">
    <div class="container">
      <div class="row justify-center">
        <div class="text-center md:col-10 lg:col-7">
          <h2 class="h3 mb-6">{title}</h2>
          <BigBlockQuote 
            quote={getQuote(intro.quote_section)?.quote || ""} 
            author={getQuote(intro.quote_section)?.author || ""} 
          />
          <figure class="my-8 md:float-left md:mr-6 md:w-1/2">
            <img src={slideMap[intro.image].src} alt="Yearn for the vast and endless sea" class="rounded-lg shadow-lg" loading="lazy" />
          </figure>
          <div class="content text-left" set:html={introContent}></div>
        </div>
      </div>
    </div>
  </section>

  <!-- Content Sections -->
  {sections.map((section: any, index: number) => (
    <ContentSection
      title={section.title}
      content={section.content}
      image={slideMap[section.image].src}
      index={index}
      pullquote={{
        quote: getQuote(section.quote_section)?.quote || "",
        author: getQuote(section.quote_section)?.author || "",
        href: section.link
      }}
    />
  ))}

  <!-- Call to Action -->
  <section class="section-sm">
    <div class="container">
      <div class="row justify-center">
        <div class="text-center">
          <a href={cta.link} class="btn-retro">{cta.text}</a>
        </div>
      </div>
    </div>
  </section>
</BaseNoHeader> 