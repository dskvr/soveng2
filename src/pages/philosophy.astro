---
import Base from "@/layouts/Base.astro";
import BigBlockQuote from "@/layouts/components/BigBlockQuote.astro";
import ContentSection from "@/layouts/components/ContentSection.astro";
import ContentLead from "@/layouts/components/ContentLead.astro";
import slideShip from "@/data/common-slides/pirate-ship-2.jpeg";
import slideFreedomTech from "@/data/common-slides/surveillance-capitalism.jpeg";
import slideWalk from "@/data/common-slides/walking.jpeg";
import slideEndurance from "@/data/common-slides/endurance.jpeg";
import slideExplorers from "@/data/common-slides/pirate-ship-2.jpeg";
import slideInPerson from "@/data/common-slides/soveng-shirt.jpeg";
import slideBias from "@/data/common-slides/show-talk-build-loop.jpeg";
import slideCypherpunks from "@/data/common-slides/cypherpunks-write-code.jpeg";
import slideWideOpenSea from "@/data/common-slides/wide-open-sea.jpeg";
import slideBellLabs from "@/data/common-slides/bell-labs.jpeg";
import slideSolvitur from "@/data/common-slides/solvitur-ambulando.jpeg";
import slideGenesisBlock from "@/data/common-slides/genesis-block.png";
import philosophyQuotes from "@/data/philosophy-quotes.json";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

// Get philosophy content
const philosophy = (await getEntry(
  "philosophy",
  "-index"
)) as CollectionEntry<"philosophy">;

const { title, meta_title, description, intro, sections } = philosophy.data;

// Helper function to find quote by section (preserving existing quote system)
const getQuote = (section: string) => {
  return philosophyQuotes.find(q => q.section === section);
};

// Map image filenames to imported slide objects
const slideMap: Record<string, any> = {
  "pirate-ship-2.jpeg": slideShip,
  "surveillance-capitalism.jpeg": slideFreedomTech,
  "walking.jpeg": slideWalk,
  "endurance.jpeg": slideEndurance,
  "soveng-shirt.jpeg": slideInPerson,
  "show-talk-build-loop.jpeg": slideBias,
  "cypherpunks-write-code.jpeg": slideCypherpunks,
  "wide-open-sea.jpeg": slideWideOpenSea,
  "bell-labs.jpeg": slideBellLabs,
  "solvitur-ambulando.jpeg": slideSolvitur,
  "genesis-block.png": slideGenesisBlock,
};
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
>
  <!-- Intro Lead Section -->
  <ContentLead
    title={title}
    content={intro.content}
    image={slideMap[intro.image].src}
    quote={getQuote(intro.quote_section)?.quote || ""}
    author={getQuote(intro.quote_section)?.author || ""}
  />

  <!-- Content Sections -->
  {sections.map((section: any, index: number) => (
    <ContentSection
      title={section.title}
      content={section.content}
      image={slideMap[section.image].src}
      index={index}
      pullquote={{
        quote: getQuote(section.quote_section)?.quote || "",
        author: getQuote(section.quote_section)?.author || "",
        href: section.link
      }}
    />
  ))}
</Base> 